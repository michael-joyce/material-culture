<?php

namespace AppBundle\DataFixtures\ORM;

use AppBundle\Entity\Reference;
use AppBundle\Entity\Vessel;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;

/**
 * Generated by Webonaute\DoctrineFixtureGenerator.
 */
class LoadReference extends Fixture implements DependentFixtureInterface {
    /**
     * {@inheritdoc}
     */
    public function load(ObjectManager $manager) {
        $item1 = new Reference();
        $item1->setArtefact($this->getReference('_reference_Bottle3'));
        $item1->setPublication($this->getReference('_reference_Publication1'));
        $item1->setDescription('<p>The artefact is described on page 5.</p>');
        $this->addReference('_reference_Reference1', $item1);
        $manager->persist($item1);

        $item2 = new Reference();
        $item2->setArtefact($this->getReference('_reference_Can2'));
        $item2->setPublication($this->getReference('_reference_Publication2'));
        $item2->setDescription('<p>The artefact is described on page 4.</p>');
        $this->addReference('_reference_Reference2', $item2);
        $manager->persist($item2);

        $item3 = new Reference();
        $item3->setArtefact($this->getReference('_reference_Ceramic1'));
        $item3->setPublication($this->getReference('_reference_Publication3'));
        $item3->setDescription('<p>The artefact is described on page 1.</p>');
        $this->addReference('_reference_Reference3', $item3);
        $manager->persist($item3);

        $manager->flush();
    }

    /**
     * This method must return an array of fixtures classes
     * on which the implementing class depends on.
     *
     * @return array
     */
    public function getDependencies() {
        return array(
            LoadBottle::class,
            LoadCan::class,
            LoadCeramic::class,
            LoadPublication::class,
        );
    }
}
