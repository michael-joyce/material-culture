# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    mc.img.dir: '%kernel.project_dir%/public/upload/artefact'
    mc.img.prefix: images/upload
    mc.thumb.width: 320
    mc.thumb.height: 240

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    AppBundle\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: main}

    AppBundle\Services\FileUploader:
        arguments:
            $imageDir: '%mc.img.dir%'

    AppBundle\Services\Thumbnailer:
        calls:
            - [ setThumbWidth, [ '%mc.thumb.width%'] ]
            - [ setThumbHeight, [ '%mc.thumb.height%'] ]

    AppBundle\EventListener\ImageListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postLoad }
        calls:
            - [ setThumbWidth, [ '%mc.thumb.width%'] ]
            - [ setThumbHeight, [ '%mc.thumb.height%'] ]
